<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>BCIs计算</title>
    <script src="https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <link href="https://cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">

    <link href="https://cdn.bootcss.com/bootstrap-switch/3.3.4/css/bootstrap3/bootstrap-switch.min.css" rel="stylesheet">
    <script src="https://cdn.bootcss.com/bootstrap-switch/3.3.4/js/bootstrap-switch.min.js"></script>
    <script src="https://unpkg.com/bootstrap-switch"></script>

    <script src="https://cdn.bootcss.com/vue/2.4.2/vue.min.js"></script>


</head>
<body>
    <!-- bootstrap switch 必须引入的文件 -->
    <script src="BCISwitch.js"></script>
    <!--<script>
        $(function () {
            /* 初始化控件 */
            $("#switch-state").bootstrapSwitch({
                onText: "ON",      // 设置ON文本
                offText: "OFF",    // 设置OFF文本
                onColor: "success",// 设置ON文本颜色     (info/success/warning/danger/primary)
                offColor: "info",  // 设置OFF文本颜色        (info/success/warning/danger/primary)
                size: "mini",    // 设置控件大小,从小到大  (mini/small/normal/large)
                // 当开关状态改变时触发
                onSwitchChange: function (event, state) {
                    if (state == true) {
                        $("#PC_RC_Beam").show();
                        //alert("ON");
                    } else {
                        $("#PC_RC_Beam").hide();
                        //alert("OFF");
                    }
                }
            });
            $("#steel_struct_switch-state").bootstrapSwitch({
                onText: "ON",      // 设置ON文本
                offText: "OFF",    // 设置OFF文本
                onColor: "success",// 设置ON文本颜色     (info/success/warning/danger/primary)
                offColor: "info",  // 设置OFF文本颜色        (info/success/warning/danger/primary)
                size: "mini",    // 设置控件大小,从小到大  (mini/small/normal/large)
                // 当开关状态改变时触发
                onSwitchChange: function (event, state) {
                    if (state == true) {
                        $("#steelStruct").show();
                        //alert("ON");
                    } else {
                        $("#steelStruct").hide();
                        //alert("OFF");
                    }
                }
            });

        });
    </script>-->
   

    <!--<script>
        const oriCoeffs = [0.30, 0.15, 0.25, 0.10, 0.10, 0.10];
        var calcCoeffs = oriCoeffs
        var vm = new Vue({
            el: '#VueBridge',
            data: {
                bridgeSelected: '',

                mainExists: [1, 1, 1, 1, 1, 1],
                coeffs: [0.30, 0.15, 0.25, 0.10, 0.10, 0.10],
                DP1: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],

                beamComponent: [],
                beamGirderWeight: 6,
                beamHorizontalTiesWeight: 4,

                //下标 0-17
                beamDP1: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,           //主梁,PC或RC梁式构件
                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],//主梁,钢结构物

                beamDP3: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],//横向联系,横向联系
                beamDP4: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],//横向联系,钢结构物

            },
            computed: {
                calcCoeffs: function () {
                    return [this.GetcalcCoeffs(0), this.GetcalcCoeffs(1), this.GetcalcCoeffs(2)
                        , this.GetcalcCoeffs(4), this.GetcalcCoeffs(4), this.GetcalcCoeffs(5)]
                },
                sigmaDP1: function () {
                    var sum = 0
                    for (i = 0; i < this.DP1.length; i++)
                        sum += this.DP1[i] * 1.0;
                    return sum.toFixed(3)
                },
                u1: function () {
                    return [this.DP1[0] / this.sigmaDP1, this.DP1[1] / this.sigmaDP1, this.DP1[2] / this.sigmaDP1
                        , this.DP1[3] / this.sigmaDP1, this.DP1[4] / this.sigmaDP1, this.DP1[5] / this.sigmaDP1
                        , this.DP1[6] / this.sigmaDP1, this.DP1[7] / this.sigmaDP1, this.DP1[8] / this.sigmaDP1, this.DP1[9] / this.sigmaDP1]
                },
                w1: function () {
                    return [this.getWeight(this.u1[0]), this.getWeight(this.u1[1]), this.getWeight(this.u1[2])
                        , this.getWeight(this.u1[3]), this.getWeight(this.u1[4]), this.getWeight(this.u1[5])
                        , this.getWeight(this.u1[6]), this.getWeight(this.u1[7]), this.getWeight(this.u1[8]), this.getWeight(this.u1[9])]
                },
                MDP1: function () {
                    var sum = 0
                    for (i = 0; i < this.DP1.length; i++)
                        sum += this.DP1[i] * this.w1[i] * 1.0;
                    return sum.toFixed(3)
                },
                showState: function (v) {
                    if (v == "beam")
                        return true;
                    else
                        return false;
                },
                isShow: function () {
                    if (this.bridgeSelected == "beam")
                        return true
                    else
                        return false
                },
                //损坏扣分值的总和
                beamSigmaDP1: function () {
                    var sum = 0
                    for (i = 0; i < this.beamDP1.length; i++)
                        sum += this.beamDP1[i] * 1.0;
                    return sum.toFixed(3)
                },
                //第[i]项(i>=0)表示第i+1项损坏的扣分值占所有损坏扣分值的比例
                beam_u1: function () {

                    var arr1 = this.beamDP1
                    var arr2 = this.beamSigmaDP1

                    var result = arr1.map(function (item) {
                        return item / arr2;
                    });

                    return result
                },
                //第[i]项(i>=0)表示第i+1项类构件的权重
                beam_w1: function () {

                    var arr1 = this.beam_u1

                    var result = arr1.map(function (u) {
                        return parseFloat(3.0 * u ** 3 - 5.5 * u ** 2 + 3.5 * u).toFixed(3);    //日后重构
                    });

                    return result
                },

                //构件综合扣分值,详见规范P18,4.5.4-4
                SDP1: function () {
                    var SDP = 0
                    for (i = 0; i < this.beamDP1.length; i++)
                        SDP += this.beamDP1[i] * this.beam_w1[i] * 1.0;
                    if (SDP < Math.max(...this.beamDP1))
                        SDP = Math.max(...this.beamDP1)
                    return SDP.toFixed(3)
                },

                //计算梁桥各个构件的权重
                beamComponentWeights: function () {
                    //初始化结果
                    var result = [0.0, 0.0]
                    var beamSum = 0.0
                    var beamGirderNume = 0.0
                    var beamHorizontalTiesNume = 0.0
                    //1、获取checkbox的状态
                    if ($.inArray('beam_girder', this.beamComponent) >= 0) {
                        beamSum = beamSum + this.beamGirderWeight
                        beamGirderNume = this.beamGirderWeight
                    }

                    if ($.inArray('beam_horizontal_ties', this.beamComponent) >= 0) {
                        beamSum = beamSum + this.beamHorizontalTiesWeight
                        beamHorizontalTiesNume = this.beamHorizontalTiesWeight
                    }

                    result = [beamGirderNume / beamSum, beamHorizontalTiesNume / beamSum]

                    return result
                },

            },
            function() {
                return {
                    items: [{
                        state: false
                    }, {
                        state: true
                    }]
                };
            },
            methods: {
                details: function () {
                    return this.site + " - 学的不仅是技术，更是梦想！";
                },
                testOutput: function (num) {
                    return parseFloat(num);
                },
                getWeight: function (u) {
                    return parseFloat(3.0 * u ** 3 - 5.5 * u ** 2 + 3.5 * u).toFixed(3);
                },
                GetcalcCoeffs: function (index) {
                    var sum = 0
                    for (i = 0; i < this.coeffs.length; i++)
                        sum += this.mainExists[i] * this.coeffs[i];
                    return (this.mainExists[index] * this.coeffs[index] / sum).toFixed(3);
                },
                toggle: function () {
                    this.isShow = !this.isShow;
                },
                setShowState: function (v) {
                    if (v == "beam")
                        return true
                    else
                        return false
                },

            }
        })

    </script>-->
    <div id="VueBridge">
        <div class="row">
            <div class="col-md-1">

            </div>
            <div class="col-md-1">
                请选择桥梁类型
            </div>
            <div class="col-md-1">
                <select v-model="bridgeSelected">
                    <option value="beam">梁桥</option>
                    <option value="cantileverSuspended">悬臂+挂梁</option>
                    <option value="truss">桁架桥</option>
                    <option value="rigid">刚构桥</option>
                </select>
            </div>
        </div>

        <t-component v-model="beamDP1"></t-component>

        <div class="row">
            <div class="col-md-1">
                {{ beamComponent }}<br />
                {{beamComponentWeights}}<br />
                {{beamSigmaDP1}}<br />
                beam_u1:{{beam_u1}}<br />
                beam_w1:{{beam_w1}}<br />
                SDP1:{{SDP1}}
            </div>
            <div class="col-md-5">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <td>桥梁分类</td>
                            <td>构件类型</td>
                            <td>比重</td>
                            <td>评价项</td>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- 梁桥 -->

                        <tr v-show="isShow">

                            <td rowspan="2">梁桥</td>
                            <td>
                                <input id="beam_girder" name="beam_girder" value="beam_girder" type="checkbox" checked="checked" v-model="beamComponent" />主梁
                            </td>
                            <td>
                                <input type="text" value="6" v-model="beamGirderWeight" />
                            </td>
                            <td>
                                PC或RC梁式构件
                                <input id="switch-beamGirderPCRC" type="checkbox" checked="checked">、
                                钢结构物
                                <input id="switch-beamGirderSteel" type="checkbox" checked="checked">
                            </td>
                        </tr>
                        <tr v-show="isShow">

                            <td>
                                <input id="beam_horizontal_ties" name="beam_horizontal_ties" value="beam_horizontal_ties" type="checkbox" checked="checked" v-model="beamComponent" />横向联系
                            </td>
                            <td>
                                <input type="text" value="4" v-model="beamHorizontalTiesWeight" />
                            </td>
                            <td>
                                横向联系
                                <input id="switch-beamHTiesHTies" type="checkbox" checked="checked">、
                                钢结构物
                                <input id="switch-beamHTiesSteel" type="checkbox" checked="checked">
                            </td>

                        </tr>
                    </tbody>

                    <tbody>
                        <!-- 悬臂+挂梁 -->
                        <tr>
                            <td rowspan="4">悬臂+挂梁</td>
                            <td>
                                <input type="checkbox" checked="checked" />悬臂梁
                            </td>
                            <td>
                                <input type="text" value="6" />
                            </td>
                            <td>
                                <button>PC或RC梁式构件</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <input type="checkbox" checked="checked" />挂梁
                            </td>
                            <td>
                                <input type="text" value="2" />
                            </td>
                            <td>
                                <button>PC或RC梁式构件</button>
                                <button>钢结构物</button>
                            </td>

                        </tr>
                        <tr>
                            <td>
                                <input type="checkbox" checked="checked" />挂梁支座
                            </td>
                            <td>
                                <input type="text" value="1" />
                            </td>
                            <td>
                                <button>支座</button>
                            </td>

                        </tr>
                        <tr>
                            <td>
                                <input type="checkbox" checked="checked" />防落梁装置
                            </td>
                            <td>
                                <input type="text" value="1" />
                            </td>
                            <td>
                                <button>防落梁装置</button>
                            </td>

                        </tr>
                    </tbody>

                    <!-- 桁架桥 -->
                    <tbody>
                        <tr>
                            <td rowspan="5">桁架桥</td>
                            <td>
                                <input type="checkbox" checked="checked" />桁片
                            </td>
                            <td>
                                <input type="text" value="5" />
                            </td>
                            <td>
                                <button>PC或RC梁式构件</button>、
                                <button>钢结构物</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <input type="checkbox" checked="checked" />主节点
                            </td>
                            <td>
                                <input type="text" value="1" />
                            </td>
                            <td>
                                <button>PC或RC梁式构件</button>、
                                <button>钢结构物</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <input type="checkbox" checked="checked" />纵梁
                            </td>
                            <td>
                                <input type="text" value="2" />
                            </td>
                            <td>
                                <button>PC或RC梁式构件</button>、
                                <button>钢结构物</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <input type="checkbox" checked="checked" />横梁
                            </td>
                            <td>
                                <input type="text" value="1" />
                            </td>
                            <td>
                                <button>PC或RC梁式构件</button>、
                                <button>钢结构物</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <input type="checkbox" checked="checked" />连接件
                            </td>
                            <td>
                                <input type="text" value="1" />
                            </td>
                            <td>
                                <button>PC或RC梁式构件</button>、
                                <button>钢结构物</button>
                            </td>
                        </tr>

                    </tbody>
                </table>
            </div>
        </div>

        <!-- 评分等级、扣分表 -->
        <div class="row">
            <div class="col-md-1">

            </div>
            <div class="col-md-9">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <td>构件类型</td>
                            <td>损坏类型</td>
                            <td>定义</td>
                            <td>损坏评价标准</td>
                            <td>说明</td>
                            <td>扣分值</td>
                        </tr>
                    </thead>

                    <!-- 梁-PC或RC梁式构件 -->
                    <tbody is="PC-RC-component" :vlu="beamGirderPCRCDP" :id="BeamBridgeId[0]"></tbody>

                    <!-- 梁-钢结构物 -->
                    <tbody is="steel-component" :vlu="beamGirderSteelDP" :id="BeamBridgeId[1]"></tbody>

                    <!-- 梁-横向联系 -->
                    <tbody is="horizontal-ties-component" :vlu="beamHTiesHTiesDP" :id="BeamBridgeId[2]"></tbody>
                    <!-- 梁-钢结构物 -->
                    <tbody is="steel-component" :vlu="beamHTiesSteelDP" :id="BeamBridgeId[3]"></tbody>
                </table>
            </div>

        </div>

        <script src="BCICore.js"></script>


    </div>

</body>
</html>